const { SlashCommandBuilder, EmbedBuilder, AttachmentBuilder } = require('discord.js');
const { ImageManager } = require('../utils/models-managers.js');


const image = new ImageManager();

// export an object with the data and execute properties
module.exports = {
    data: new SlashCommandBuilder()
	    .setName('image')
	    .setDescription('Send image generated by DALL-E Artificial Intelligence!')
	    .addStringOption(option =>
		    option.setName('prompt')
			    .setDescription('The prompt to generate the image from')
			    .setRequired(true)),

    async execute(interaction) {
        // defer reply until the command finishes executing
        await interaction.deferReply();
        // create error image and logo icon attachments
        const error = new AttachmentBuilder('./src/assets/error.png');
        const icon = new AttachmentBuilder('./src/assets/openai-logo.png');
        // get the prompt option from the interaction object
        const input = interaction.options.getString('prompt');
        // generate an image from the prompt
        let output = await image.generate_image(input);
        // send reply with the embed of the generated image
        await interaction.editReply({ embeds: [this.embedImage(input, output)], files: [icon, error] });
        console.log('Image sent!');
    },

    embedImage(title, url) {
        return new EmbedBuilder()
        .setColor(0x19C37D)
        .setTitle(title.toUpperCase())
        .setAuthor({
          name: 'OpenAI',
          iconURL: 'attachment://openai-logo.png',
          url: 'https://openai.com'
        }) 
        .setImage(url)
        .setFooter({ text: 'Image generated by DALLÂ·E Artificial Intelligence'});
    }
};
